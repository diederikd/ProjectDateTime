package TestLanguageDateTime.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptContext = new ConceptDescriptorBuilder("TestLanguageDateTime.structure.Context", MetaIdFactory.conceptId(0x77c1272932b445a1L, 0xaaa405d08cec0b0eL, 0x6b28562f905fc07L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(8865844999314572186L, "text")).properties("text").childDescriptors(new ConceptDescriptorBuilder.Link(482594770213272584L, "entities", MetaIdFactory.conceptId(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90495acL), true, true, false)).children(new String[]{"entities"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptRule = new ConceptDescriptorBuilder("TestLanguageDateTime.structure.Rule", MetaIdFactory.conceptId(0x77c1272932b445a1L, 0xaaa405d08cec0b0eL, 0x7b179a3374fa6144L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(8869727536926056773L, "expression", MetaIdFactory.conceptId(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x7b179a3374fa5a8eL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptTestContext = new ConceptDescriptorBuilder("TestLanguageDateTime.structure.TestContext", MetaIdFactory.conceptId(0x77c1272932b445a1L, 0xaaa405d08cec0b0eL, 0x7b179a3374fa61beL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(8869727536926056895L, "rules", MetaIdFactory.conceptId(0x77c1272932b445a1L, 0xaaa405d08cec0b0eL, 0x7b179a3374fa6144L), true, true, false)).children(new String[]{"rules"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptContext, myConceptRule, myConceptTestContext);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptContext;
      case 1:
        return myConceptRule;
      case 2:
        return myConceptTestContext;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"TestLanguageDateTime.structure.Context", "TestLanguageDateTime.structure.Rule", "TestLanguageDateTime.structure.TestContext"};
}
