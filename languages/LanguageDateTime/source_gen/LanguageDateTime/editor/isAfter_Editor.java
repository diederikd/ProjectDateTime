package LanguageDateTime.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;

public class isAfter_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_m4iqq5_a(editorContext, node);
  }
  private EditorCell createCollection_m4iqq5_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_m4iqq5_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createRefNode_m4iqq5_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_m4iqq5_b0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_m4iqq5_c0(editorContext, node));
    return editorCell;
  }
  private EditorCell createRefNode_m4iqq5_a0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new isAfter_Editor.instant1SingleRoleHandler_m4iqq5_a0(node, MetaAdapterFactory.getContainmentLink(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x7b179a3374fa5a8eL, 0x6b28562f906954eL, "instant1"), editorContext);
    return provider.createCell();
  }
  private class instant1SingleRoleHandler_m4iqq5_a0 extends SingleRoleCellProvider {
    public instant1SingleRoleHandler_m4iqq5_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("instant1");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_instant1");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no instant1>";
    }
  }
  private EditorCell createConstant_m4iqq5_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, " is after");
    editorCell.setCellId("Constant_m4iqq5_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_m4iqq5_c0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new isAfter_Editor.instant2SingleRoleHandler_m4iqq5_c0(node, MetaAdapterFactory.getContainmentLink(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x7b179a3374fa5a8eL, 0x6b28562f9069551L, "instant2"), editorContext);
    return provider.createCell();
  }
  private class instant2SingleRoleHandler_m4iqq5_c0 extends SingleRoleCellProvider {
    public instant2SingleRoleHandler_m4iqq5_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("instant2");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_instant2");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no instant2>";
    }
  }
}
