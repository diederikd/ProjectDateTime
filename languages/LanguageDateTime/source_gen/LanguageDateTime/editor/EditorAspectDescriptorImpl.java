package LanguageDateTime.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f905561bL, "LanguageDateTime.structure.Date"))) {
        return Collections.<ConceptEditor>singletonList(new Date_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f9058c50L, "LanguageDateTime.structure.DateTimeInstant"))) {
        return Collections.<ConceptEditor>singletonList(new DateTimeInstant_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90495b4L, "LanguageDateTime.structure.DateTimeInterval"))) {
        return Collections.<ConceptEditor>singletonList(new DateTimeInterval_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90555f6L, "LanguageDateTime.structure.Days"))) {
        return Collections.<ConceptEditor>singletonList(new Days_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f905551fL, "LanguageDateTime.structure.Friday"))) {
        return Collections.<ConceptEditor>singletonList(new Friday_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90495c8L, "LanguageDateTime.structure.Monday"))) {
        return Collections.<ConceptEditor>singletonList(new Monday_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90555dbL, "LanguageDateTime.structure.Months"))) {
        return Collections.<ConceptEditor>singletonList(new Months_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f9055520L, "LanguageDateTime.structure.Saturday"))) {
        return Collections.<ConceptEditor>singletonList(new Saturday_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f90495c9L, "LanguageDateTime.structure.Sunday"))) {
        return Collections.<ConceptEditor>singletonList(new Sunday_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f905551eL, "LanguageDateTime.structure.Thursday"))) {
        return Collections.<ConceptEditor>singletonList(new Thursday_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f905569fL, "LanguageDateTime.structure.Time"))) {
        return Collections.<ConceptEditor>singletonList(new Time_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f9055584L, "LanguageDateTime.structure.Years"))) {
        return Collections.<ConceptEditor>singletonList(new Years_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x6b28562f906954dL, "LanguageDateTime.structure.isAfter"))) {
        return Collections.<ConceptEditor>singletonList(new isAfter_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x5e765e444eab12ecL, "LanguageDateTime.structure.isBefore"))) {
        return Collections.<ConceptEditor>singletonList(new isBefore_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xef5812095a6e41d4L, 0x8160c9506c67dfa5L, 0x5e765e444eab1d78L, "LanguageDateTime.structure.isSameAs"))) {
        return Collections.<ConceptEditor>singletonList(new isSameAs_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



}
